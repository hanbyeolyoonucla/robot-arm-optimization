function performance = PerformanceIndexFunction(X)

% 0. input varialbes
L1 = X(1);
L2 = X(2);
L3 = X(3);
L4 = X(4);
L5 = X(5);
alpha = X(6);
x = X(7);
y = X(8);
z = X(9);

% 1. Define Work Space
R_SJ = rot('z',pi/2)*rot('y',alpha);
p_SJ = [r_cube;y_cube;z_cube];
T_SJ = [R_SJ p_SJ; zeros(1,3) 1];
[T_ST,p_ST] = DefineWorkSpace(maxillaOn,mandibleOn,occusalCutOn, axialCutOn,n_angle,ang_mouthOpen,T_SJ);

% 2. Analytic Inverse Kinematics / Check Collision / Compute ISO
[n_teeth,n_discrete] = size(T_ST);
q_IK = zeros([n_joint,size(T_ST)]);
eflag = zeros(size(T_ST));
ISO_ang_sum = 0;
ISO_ang = zeros(size(T_ST));
ISO_lin_sum = 0;
ISO_lin = zeros(size(T_ST));
for ii = 1:n_teeth
    for jj = 1:n_discrete
        [q_IK(:,ii,jj),eflag(ii,jj),~] = AnalyticIK(n_joint,L1,L2,L3,L4,L5,Ltool,S,M_EF,T_ST{ii,jj});
        % if no IK exits, break
        if eflag(ii,jj) == 0
            break
        else % if IK exists
            collisionStatus = RobotCheckCollision(checkCollisionOn,drawCylinderOn,S,q_IK(:,ii,jj),n_joint,7,...
                L1,L2,L3,L4,L5,Ltool,Ltool1);
            if collisionStatus == 0
                [J, ~, ~] = AJacobian(S,q_IK(:,ii,jj),M_EF,n_joint);
                J_v = J(4:6,:);
                J_w = J(1:3,:);
                SingularValue_lin = svd(J_v);
                SingularValue_ang = svd(J_w);
                ISO_lin(ii,jj) = SingularValue_lin(end)/SingularValue_lin(1);
                ISO_ang(ii,jj) = SingularValue_ang(end)/SingularValue_ang(1);
                ISO_lin_sum = ISO_lin_sum + ISO_lin(ii,jj);
                ISO_ang_sum = ISO_ang_sum + ISO_ang(ii,jj);
            else
                break
            end
        end
    end
    if eflag(ii,jj) == 0 || collisionStatus == 1
        break
    end
end
ISO_lin_min = min(ISO_lin,[],'all');
ISO_ang_min = min(ISO_ang,[],'all');

% display for checking iteration status
cost(i_alpha,i_r,i_y,i_z) = ISO_lin_sum*ISO_ang_sum*ISO_lin_min*ISO_ang_min...
    /(L1^3+L2^3+(sqrt(L3^2+L4^2))^3+L5^3);
disp([i_alpha,i_r,i_y,i_z])
disp(cost(i_alpha,i_r,i_y,i_z))


end